/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */



#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define LOWER 1
#define RAISE 2


/ {
    behaviors {
      skq: sticky_key_quick_release {
        compatible = "zmk,behavior-sticky-key";
        label = "STICKY_KEY_QUICK_RELEASE";
        #binding-cells = <1>;
        bindings = <&kp>;
        release-after-ms = <1000>;
        quick-release;
        ignore-modifiers;
        // lazy;
      };

        skh: behavior {
            compatible = "zmk,behavior-tap-hold";
            label = "STICKY_HOLD";
            # The parameters below are placeholders. Adjust them as per your needs.
            tapping-term-ms = <225>; # Define the tapping term duration
            flavor = "tap-preferred"; # Set the flavor to "sticky"
            bindings = <&kp> <&skq>; # Define the key to be sticky or normal
            hold-while-undecided-linger;
        };

     td_caps: tap_dance_mod_tap {
        compatible = "zmk,behavior-tap-dance";
        label = "TAP_DANCE_CAPS";
        #binding-cells = <0>;
        tapping-term-ms = <275>;
        bindings = <&kp LSHIFT>, <&kp CAPS>;
        };

        pwda: pop_os_workspace_down {
            compatible = "zmk,behavior-mod-morph";
            label = "POP_OS_WORKSPACE_DOWN";
            #binding-cells = <0>;
            bindings = <&kp LC(LG(DOWN))>, <&kp LS(LG(DOWN))>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        pwua: pop_os_workspace_up {
            compatible = "zmk,behavior-mod-morph";
            label = "POP_OS_WORKSPACE_UP";
            #binding-cells = <0>;
            bindings = <&kp LC(LG(UP))>, <&kp LS(LG(UP))>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

};



        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp ESC &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &skh LCTRL LCTRL &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &sk RALT
                  &kp LGUI &mo LOWER &kp SPACE   &kp RET &mo RAISE &td_caps
                        >;
                };


               lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |  DEL |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp DEL    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp DEL
   &kp LSHIFT &trans &trans &pwua &pwda &trans   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
   &trans  &bt BT_SEL 0  &bt BT_SEL 1   &bt BT_SEL 2  &bt BT_SEL 3   &bt BT_SEL 4         &trans   &kp C_VOL_DN   &kp C_VOL_UP &kp C_MUTE    &trans &trans
                          	        &bt BT_CLR     &trans       &kp SPACE      &kp RET  &trans   &kp RSHIFT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  (  |  )  |  *  |  DEL |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  _  |  \   |
// | SHFT |     |     |     |     |     |   |  `  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp LPAR &kp RPAR &kp STAR &kp DEL
   &kp F1  &kp F2  &kp F3 &kp F4   &kp F5  &kp F6      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp UNDER &kp BSLH
   &kp F7 &kp F8   &kp F9 &kp F10  &kp F11  &kp F12      &kp GRAVE &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                    	     &sk LCTRL &sk LALT   &sk LSHIFT   &kp RET   &trans    &kp RALT
                        >;

                };

        };
};
